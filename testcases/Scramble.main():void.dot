digraph "Scramble.main():void" {
size = "11,7.5";
codeblock_13 [ shape = box, label = "block 13\nconst 10\nnewarray of S of 1 dimension\nstore 0 of type S[]\nconst 0\nstore 1 of type int"];
codeblock_12 [ shape = box, label = "block 12\nload 1 of type int\nconst 10"];
codeblock_4 [ shape = box, label = "block 4\nif_cmpge int\nconst 0\nstore 1 of type int"];
codeblock_3 [ shape = box, label = "block 3\nload 1 of type int\nconst 10"];
codeblock_0 [ shape = box, label = "block 0\nif_cmpge int\nreturn void"];
codeblock_3->codeblock_0 [color = blue label = "" fontsize = 8]
codeblock_2 [ shape = box, label = "block 2\nif_cmplt int\nload 0 of type S[]\nload 1 of type int\nload from array of S\ncall S.toString():String [A.toString():String, S.toString():String, B.toString():String]\nnewstring \\n\ncall String.concat(String):String [String.concat(String):String]\ncall String.output():void [String.output():void]\nload 1 of type int\nconst 1\nadd int\nstore 1 of type int"];
codeblock_2->codeblock_3 [color = blue label = "" fontsize = 8]
codeblock_3->codeblock_2 [color = blue label = "" fontsize = 8]
codeblock_4->codeblock_3 [color = blue label = "" fontsize = 8]
codeblock_12->codeblock_4 [color = blue label = "" fontsize = 8]
codeblock_11 [ shape = box, label = "block 11\nif_cmplt int\nload 1 of type int\nload 1 of type int\nconst 3\ndiv int\nconst 3\nmul int\nsub int\nconst 0"];
codeblock_10 [ shape = box, label = "block 10\nif_cmpne int\nload 1 of type int\nload 1 of type int\nconst 3\ndiv int\nconst 3\nmul int\nsub int\nconst 1"];
codeblock_9 [ shape = box, label = "block 9\nif_cmpne int\nload 0 of type S[]\nload 1 of type int\nnew S\ndup S\ncall S() [S()]\nstore into array of S"];
codeblock_6 [ shape = box, label = "block 6\nload 1 of type int\nconst 1\nadd int\nstore 1 of type int"];
codeblock_6->codeblock_12 [color = blue label = "" fontsize = 8]
codeblock_9->codeblock_6 [color = blue label = "" fontsize = 8]
codeblock_10->codeblock_9 [color = blue label = "" fontsize = 8]
codeblock_8 [ shape = box, label = "block 8\nif_cmpeq int\nload 0 of type S[]\nload 1 of type int\nnew B\ndup B\ncall B() [B()]\nstore into array of S"];
codeblock_8->codeblock_6 [color = blue label = "" fontsize = 8]
codeblock_10->codeblock_8 [color = blue label = "" fontsize = 8]
codeblock_11->codeblock_10 [color = blue label = "" fontsize = 8]
codeblock_7 [ shape = box, label = "block 7\nif_cmpeq int\nload 0 of type S[]\nload 1 of type int\nnew A\ndup A\ncall A() [A()]\nstore into array of S"];
codeblock_7->codeblock_6 [color = blue label = "" fontsize = 8]
codeblock_11->codeblock_7 [color = blue label = "" fontsize = 8]
codeblock_12->codeblock_11 [color = blue label = "" fontsize = 8]
codeblock_13->codeblock_12 [color = blue label = "" fontsize = 8]
}